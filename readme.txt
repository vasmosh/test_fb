



1.
==   - это сравнение 2==2 -> true  2==2.0 -> true
=:=  - строгое соответствие   2=:=2 -> true  2=:=2.0 -> false

2.
OTP позволяет создавать приложения на Erlang.
Супервизоры OTP позволяют наблюдать за процессами и в случаи их падения реализовывать ту политику которая была установлена.

3. Что такое behaviour? Зачем он нужен?
Договор о соответствии вашего модуля модулю, тому на который подписываетесь. Соглашаетесь с его поведением, его входными-выходными параметрами и логикой работы.
При этом в вашем модуле должны быть указаны те-же обязательные точки входа-выхода, которые описаны в behaviour.
Он нужен для того, чтобы ваш разрабатываемый модуль полностью соответствовал логике работы behaviour модуля и его поведение было предсказуемым.

4.Придумайте пример использования gen_statem.

Машина состояний, определяет логику работы модуля на каждом из состояний. Определяет разрешенные состояния и их переходы
На  gen_statem реализовывал локику работы телефонного аппарата в SIP телефонии.
Переходами из состония в состояние служили:
1. Состояние трубки Положена-Поднята-Нажата кнопка Flash
2. Прием цифер при наборе номера при Поднятой трубке
3. Сообщения VoIP протокола

5. Что такое gen_server:cast/2? Назовите три причины его не использовать

Способ отправки ассинхонных сообщений gen_server -y

1. нельзя узнать рез-т выполнения команды на gen_server
2. нет гарантии получения сообщения сервером
3.???


6. Erlang-нода, обрабатывая данные, съела 15GB памяти и вот-вот будет убита
   системой. Как понять, куда делась память? Как расследовать ситуацию?


   не дебажил.
   Подключится к ноде, посмотреть какие процессы запущены, использовать google для поиска.